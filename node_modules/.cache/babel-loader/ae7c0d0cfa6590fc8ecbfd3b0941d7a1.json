{"ast":null,"code":"var _jsxFileName = \"/Users/rsreddy27/Desktop/fordsite/src/Components/Screen3/Step0.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledWhiteIcon from '@material-ui/icons/PlayCircleFilledWhite';\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nconst items = [{\n  \"name\": \"SXT\"\n}];\nconst colors = [{\n  \"name\": \"Red\"\n}, {\n  \"name\": \"Black\"\n}];\n\nclass Step0 extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.handleNextStep();\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          handleFormChange = _this$props.handleFormChange,\n          handleBackScreenChange = _this$props.handleBackScreenChange,\n          handleStepChange = _this$props.handleStepChange,\n          stepFields = _this$props.stepFields,\n          handleFormChangeSteps = _this$props.handleFormChangeSteps;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.mainContainerTop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.mainHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"VEHICLE BASICS\"), React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.subHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Provide your VIN (Vehicle Identification Number) or license plate number.\"), React.createElement(\"div\", {\n      className: classes.formContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.onSubmit,\n      onError: errors => console.log(errors),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Select trim\"), React.createElement(SelectValidator, {\n      value: stepFields.trim,\n      onChange: handleFormChangeSteps,\n      variant: \"outlined\",\n      name: \"trim\",\n      className: classes.inputField,\n      validators: ['required'],\n      errorMessages: ['Trim is required.'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Select trim\")), items.map(item => {\n      return React.createElement(MenuItem, {\n        key: item.name,\n        value: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, item.name);\n    })), React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Select Mileage\"), React.createElement(TextValidator, {\n      variant: \"outlined\",\n      className: classes.inputField,\n      onChange: handleStepChange,\n      name: \"mileage\",\n      value: stepFields.mileage,\n      validators: ['required'],\n      errorMessages: ['Mileage is required'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.subText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Provide your VIN (Vehicle Identification Number) or license plate number. Provide your VIN (Vehicle Identification Number) or license plate number.\"), React.createElement(Divider, {\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Do You have two keys?\"), React.createElement(RadioGroup, {\n      \"aria-label\": \"keys\",\n      name: \"keys\",\n      value: stepFields.keys,\n      onChange: handleStepChange,\n      className: classes.radio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      value: \"yes\",\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      label: \"Yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"no\",\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      label: \"No\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Select Color\"), React.createElement(SelectValidator, {\n      value: stepFields.color,\n      onChange: handleFormChangeSteps,\n      variant: \"outlined\",\n      name: \"color\",\n      className: classes.inputField,\n      validators: ['required'],\n      errorMessages: ['color is required.'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Select color\")), colors.map(item => {\n      return React.createElement(MenuItem, {\n        key: item.name,\n        value: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, item.name);\n    })), React.createElement(\"div\", {\n      className: classes.navButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.navButtonRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"primary\",\n      className: \"\".concat(classes.button, \" \").concat(classes.next),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Next\")), React.createElement(\"div\", {\n      className: classes.navButtonLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.button,\n      onClick: () => handleBackScreenChange('screen2'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(PlayCircleFilledWhiteIcon, {\n      className: classes.backArrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), \" Back\")))))));\n  }\n\n}\n\nconst styles = theme => ({\n  mainContainerTop: {\n    padding: '50px 80px 0 80px',\n    [theme.breakpoints.down('sm')]: {\n      padding: '20px 20px 0 20px'\n    },\n    color: theme.palette.text.secondary\n  },\n  mainContainerBottom: {\n    padding: '0 80px 100px 80px',\n    [theme.breakpoints.down('sm')]: {\n      padding: '0 20px 20px 20px'\n    },\n    color: theme.palette.text.secondary\n  },\n  mainHeading: {\n    fordFamily: 'fordAntennaCond',\n    width: '682px',\n    height: '70px',\n    lineHeight: '1.4px',\n    letterSpacing: '2px',\n    textAlign: 'center',\n    fontSize: '50px',\n    color: '#4d4d4d',\n    marginLeft: '100px'\n  },\n  subHeading: {\n    width: '770px',\n    height: '27px',\n    fontFamily: 'FordAntenna',\n    fontSize: '14px',\n    fontWeight: 'normal',\n    fontStretch: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '1.93',\n    letterSpacing: '1px',\n    textAlign: 'center',\n    color: '#4d4d4d'\n  },\n  inputField: {\n    width: '100%'\n  },\n  divider: {\n    margin: '40px 0'\n  },\n  radio: {\n    flexDirection: 'row',\n    '& label': {\n      marginRight: '60px'\n    }\n  },\n  formContainer: {\n    margin: '20px auto',\n    maxWidth: '520px'\n  },\n  subText: {\n    textAlign: 'left',\n    lineHeight: '11px'\n  },\n  label: {\n    display: 'block',\n    textAlign: 'left',\n    marginTop: '15px',\n    fontFamily: '20px'\n  } // next: {\n  //     float: 'right',\n  //     width: '133px',\n  //     height: '40px',\n  //     objectFit: 'contain',\n  //     borderRadius: '20px',\n  //     boxShadow: '0 10px 10px 0 rgba(0, 0, 0, 0.1), 0 20px 20px 0 rgba(0, 0, 0, 0.1)',\n  //     [theme.breakpoints.down('sm')]: { \n  //         float: 'none',\n  //       }, \n  //   //  backgroundImage: 'linear-gradient(to bottom, rgba(255, 255, 255, 0.5), rgba(0, 0, 0, 0.5)), linear-gradient(to bottom, #102b4e, #102b4e)',\n  // },\n  // navButton: {\n  //     maxWidth: '500px',\n  //     margin: '50px auto',\n  //     height: '30px',\n  //     [theme.breakpoints.down('sm')]: { \n  //         height: '80px'\n  //       },\n  // },\n  // navButtonLicence: {\n  //     [theme.breakpoints.down('sm')]: { \n  //         marginTop: '25px'\n  //       },\n  // },\n  // navButtonRight: {\n  //     maxWidth: '50%',\n  //     float: 'right',\n  //     [theme.breakpoints.down('sm')]: { \n  //         float: 'none',\n  //         width: '100%',\n  //         textAlign: 'center',\n  //         marginBottom: '20px',\n  //       }, \n  // },\n  // navButtonLeft: {\n  //     maxWidth: '50%',\n  //     float: 'left',\n  //     [theme.breakpoints.down('sm')]: { \n  //         float: 'none',\n  //         width: '100%',\n  //         textAlign: 'center',\n  //         marginBottom: '20px',\n  //       }, \n  // },\n  // backArrow: {\n  //     transform: 'rotateY(180deg)',\n  //     width: '16px',\n  //     height: '16px',\n  //     marginRight: '5px',\n  //     color: '#102b4e',\n  //   },\n\n});\n\nexport default withStyles(styles)(Step0);","map":{"version":3,"sources":["/Users/rsreddy27/Desktop/fordsite/src/Components/Screen3/Step0.js"],"names":["React","withStyles","Button","PlayCircleFilledWhiteIcon","ValidatorForm","TextValidator","SelectValidator","Tooltip","Typography","MenuItem","Divider","Radio","RadioGroup","FormControlLabel","items","colors","Step0","Component","onSubmit","event","preventDefault","props","handleNextStep","render","classes","handleFormChange","handleBackScreenChange","handleStepChange","stepFields","handleFormChangeSteps","mainContainerTop","mainHeading","subHeading","formContainer","errors","console","log","label","trim","inputField","map","item","name","mileage","subText","divider","keys","radio","color","navButton","navButtonRight","button","next","navButtonLeft","backArrow","styles","theme","padding","breakpoints","down","palette","text","secondary","mainContainerBottom","fordFamily","width","height","lineHeight","letterSpacing","textAlign","fontSize","marginLeft","fontFamily","fontWeight","fontStretch","fontStyle","margin","flexDirection","marginRight","maxWidth","display","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledWhiteIcon from '@material-ui/icons/PlayCircleFilledWhite';\nimport { ValidatorForm, TextValidator, SelectValidator} from 'react-material-ui-form-validator'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst items = [\n    {\n        \"name\": \"SXT\",\n    },\n]\n\nconst colors = [\n    {\n        \"name\": \"Red\",\n    },\n    {\n        \"name\": \"Black\",\n    },\n]\n\nclass Step0 extends React.Component {\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.handleNextStep()\n    }\n    render() {\n        const {classes, handleFormChange, handleBackScreenChange, handleStepChange, stepFields, handleFormChangeSteps} = this.props\n\n        return (\n        <div>\n            <div className={classes.mainContainerTop}>\n                <Typography variant=\"h4\" className={classes.mainHeading}>\n                    VEHICLE BASICS\n                </Typography>\n                <Typography variant=\"caption\" className={classes.subHeading}>\n                    Provide your VIN (Vehicle Identification Number) or license plate number.\n                </Typography>\n                <div className={classes.formContainer}>\n                    <ValidatorForm\n                        ref=\"form\"\n                        onSubmit={this.onSubmit}\n                        onError={errors => console.log(errors)}\n                    >\n                        <Typography variant=\"caption\" className={classes.label}>\n                           Select trim\n                        </Typography>\n                        <SelectValidator\n                            value={stepFields.trim}\n                            onChange={handleFormChangeSteps}\n                            variant=\"outlined\"\n                            name='trim'\n                            className={classes.inputField}\n                            validators={['required']}\n                            errorMessages={['Trim is required.']}\n                            >\n                            <MenuItem value=\"\">\n                                <em>Select trim</em>\n                            </MenuItem>\n                            {\n                                items.map(item => {\n                                    return <MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>\n                                })\n                            }\n                        </SelectValidator>\n                        <Typography variant=\"caption\" className={classes.label}>\n                           Select Mileage\n                        </Typography>\n                        <TextValidator\n                            variant=\"outlined\" className={classes.inputField}\n                            onChange={handleStepChange}\n                            name=\"mileage\"\n                            \n                            value={stepFields.mileage}\n                            validators={['required']}\n                            errorMessages={['Mileage is required']}\n                        />\n                        <Typography variant=\"caption\" className={classes.subText}>\n                            Provide your VIN (Vehicle Identification Number) or license plate number. Provide your VIN (Vehicle Identification Number) or license plate number.\n                        </Typography>\n                        <Divider className={classes.divider} />\n                        <Typography variant=\"caption\" className={classes.label}>\n                           Do You have two keys?\n                        </Typography>\n                        <RadioGroup aria-label=\"keys\" name=\"keys\" value={stepFields.keys} onChange={handleStepChange} className={classes.radio}>\n                            <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\"  />\n                            <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\n                        </RadioGroup>\n                        <Divider className={classes.divider} />\n                        <Typography variant=\"caption\" className={classes.label}>\n                           Select Color\n                        </Typography>\n                        <SelectValidator\n                            value={stepFields.color}\n                            onChange={handleFormChangeSteps}\n                            variant=\"outlined\"\n                            name='color'\n                            className={classes.inputField}\n                            validators={['required']}\n                            errorMessages={['color is required.']}\n                            >\n                            <MenuItem value=\"\">\n                                <em>Select color</em>\n                            </MenuItem>\n                            {\n                                colors.map(item => {\n                                    return <MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>\n                                })\n                            }\n                        </SelectValidator>\n                        <div className={classes.navButton}>\n\n                            <div className={classes.navButtonRight}>\n                                <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={`${classes.button} ${classes.next}`} >\n                                    Next\n                                </Button>\n                            </div>\n                            \n                            <div className={classes.navButtonLeft}>\n                                <Button className={classes.button} onClick={() => handleBackScreenChange('screen2')} >\n                                    <PlayCircleFilledWhiteIcon className={classes.backArrow} /> Back\n                                </Button>\n                            </div>\n                          \n                        </div>\n                        \n                        \n                    </ValidatorForm>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nconst styles = theme => ({\n    mainContainerTop: {\n        padding: '50px 80px 0 80px',\n        [theme.breakpoints.down('sm')]: { \n            padding: '20px 20px 0 20px',\n          },\n        color: theme.palette.text.secondary,\n    },\n    mainContainerBottom: {\n        padding: '0 80px 100px 80px',\n        [theme.breakpoints.down('sm')]: { \n            padding: '0 20px 20px 20px',\n          },\n        color: theme.palette.text.secondary,\n    },\n    mainHeading:{\n    fordFamily:'fordAntennaCond',\n    width:'682px',\n    height:'70px',\n    lineHeight:'1.4px',\n    letterSpacing:'2px',\n    textAlign:'center',\n    fontSize:'50px',\n    color: '#4d4d4d',\n    marginLeft:'100px'\n    \n    },\n    subHeading:{\n        width: '770px',\n        height: '27px',\n        fontFamily: 'FordAntenna',\n        fontSize: '14px',\n        fontWeight: 'normal',\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        lineHeight: '1.93',\n        letterSpacing: '1px',\n        textAlign: 'center',\n        color: '#4d4d4d',\n    },\n    inputField: {\n        width: '100%',\n    },\n    divider: {\n        margin: '40px 0'\n    },\n    radio: {\n        flexDirection: 'row',\n        '& label': {\n            marginRight: '60px'\n        }\n    },\n    formContainer: {\n        margin: '20px auto',\n        maxWidth: '520px',\n\n    },\n    subText: {\n        textAlign: 'left',\n        lineHeight: '11px',\n    },\n    label: {\n        display: 'block',\n        textAlign: 'left',\n        marginTop: '15px',\n        fontFamily:'20px'\n    },\n    // next: {\n    //     float: 'right',\n    //     width: '133px',\n    //     height: '40px',\n    //     objectFit: 'contain',\n    //     borderRadius: '20px',\n    //     boxShadow: '0 10px 10px 0 rgba(0, 0, 0, 0.1), 0 20px 20px 0 rgba(0, 0, 0, 0.1)',\n    //     [theme.breakpoints.down('sm')]: { \n    //         float: 'none',\n    //       }, \n    //   //  backgroundImage: 'linear-gradient(to bottom, rgba(255, 255, 255, 0.5), rgba(0, 0, 0, 0.5)), linear-gradient(to bottom, #102b4e, #102b4e)',\n    // },\n    // navButton: {\n    //     maxWidth: '500px',\n    //     margin: '50px auto',\n    //     height: '30px',\n    //     [theme.breakpoints.down('sm')]: { \n    //         height: '80px'\n    //       },\n    // },\n    // navButtonLicence: {\n    //     [theme.breakpoints.down('sm')]: { \n    //         marginTop: '25px'\n    //       },\n    // },\n    // navButtonRight: {\n    //     maxWidth: '50%',\n    //     float: 'right',\n    //     [theme.breakpoints.down('sm')]: { \n    //         float: 'none',\n    //         width: '100%',\n    //         textAlign: 'center',\n    //         marginBottom: '20px',\n    //       }, \n    // },\n    // navButtonLeft: {\n    //     maxWidth: '50%',\n    //     float: 'left',\n    //     [theme.breakpoints.down('sm')]: { \n    //         float: 'none',\n    //         width: '100%',\n    //         textAlign: 'center',\n    //         marginBottom: '20px',\n    //       }, \n    // },\n    // backArrow: {\n    //     transform: 'rotateY(180deg)',\n    //     width: '16px',\n    //     height: '16px',\n    //     marginRight: '5px',\n    //     color: '#102b4e',\n    //   },\n})\n\nexport default withStyles(styles)(Step0)\n\n"]},"metadata":{},"sourceType":"module"}